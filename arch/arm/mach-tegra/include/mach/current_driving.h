#ifndef _CURRENT_DRIVING_H_
#define _CURRENT_DRIVING_H_
#include <asm/ioctl.h>

typedef enum
{
    AOCFG1PADCTRL = 0x868,
    AOCFG2PADCTRL = 0x86C,
    ATCFG1PADCTRL = 0x870,
    ATCFG2PADCTRL = 0x874,
    CDEV1CFGPADCTRL = 0x878,
    CDEV2CFGPADCTRL = 0x87C,
    CSUSCFGPADCTRL = 0x880,
    DAP1CFGPADCTRL = 0x884,
    DAP2CFGPADCTRL = 0x888,
    DAP3CFGPADCTRL = 0x88CL,
    DAP4CFGPADCTRL = 0x890,
    DBGCFGPADCTRL = 0x894,
    LCDCFG1PADCTRL = 0x898,
    LCDCFG2PADCTRL = 0x89C,
    SDIO2CFGPADCTRL = 0x8A0,
    SDIO3CFGPADCTRL = 0x8A4,
    SPICFGPADCTRL = 0x8A8,
    UAACFGPADCTRL = 0x8AC,
    UABCFGPADCTRL = 0x8B0,
    UART2CFGPADCTRL = 0x8B4,
    UART3CFGPADCTRL = 0x8B8,
    VICFG1PADCTRL = 0x8BC,
    VICFG2PADCTRL = 0x8C0,
    XM2CFGAPADCTRL = 0x8C4,
    XM2CFGCPADCTRL = 0x8C8,
    XM2CFGDPADCTRL = 0x8CC,
    XM2CLKCFGPADCTRL = 0x8D0,
    XM2COMPPADCTRL = 0x8D4,
    XM2VTTGENPADCTRL = 0x8D8,
    SDIO1CFGPADCTRL = 0x8E0,
    XM2CFGCPADCTRL2 = 0x8E4,
    XM2CFGDPADCTRL2 = 0x8E8,
    CRTCFGPADCTRL = 0x8EC,
    DDCCFGPADCTRL = 0x8F0,
    GMACFGPADCTRL = 0x8F4,
    GMBCFGPADCTRL = 0x8F8,
    GMCCFGPADCTRL = 0x8FC,
    GMDCFGPADCTRL = 0x900,
    GMECFGPADCTRL = 0x904,
    OWRCFGPADCTRL = 0x908,
    UADCFGPADCTRL = 0x90C,
} PadCtrl;

typedef enum
{
    OHM_400 = 0,
    OHM_200 = 1,
    OHM_100 = 2,
    OHM_50 = 3,
} OHM;


struct current_driving_ctrl_t {
	PadCtrl padctrl;
	OHM ohm;
};


#define CURRENT_DRIVING_IOC_MAGIC 	'z'
#define CURRENT_DRIVING_IOC_WRITE					_IOW(CURRENT_DRIVING_IOC_MAGIC, 0, struct current_driving_ctrl_t)
#endif